// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ConfigColumns holds the columns for the "config" table.
	ConfigColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "config_type", Type: field.TypeString},
		{Name: "config_key", Type: field.TypeString},
		{Name: "config_val", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// ConfigTable holds the schema information for the "config" table.
	ConfigTable = &schema.Table{
		Name:       "config",
		Columns:    ConfigColumns,
		PrimaryKey: []*schema.Column{ConfigColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "configuration_config_type_config_key",
				Unique:  true,
				Columns: []*schema.Column{ConfigColumns[1], ConfigColumns[2]},
			},
		},
	}
	// DatasetColumns holds the columns for the "dataset" table.
	DatasetColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "path", Type: field.TypeString},
		{Name: "is_valid", Type: field.TypeBool, Default: false},
		{Name: "is_trainable", Type: field.TypeBool, Default: false},
		{Name: "is_testable", Type: field.TypeBool, Default: false},
		{Name: "is_leaf", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "is_use", Type: field.TypeBool, Default: true},
		{Name: "stat", Type: field.TypeJSON},
		{Name: "stat_path", Type: field.TypeString, Nullable: true},
		{Name: "engine", Type: field.TypeJSON, Nullable: true},
		{Name: "data_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "dr_id", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "dataset_root_datasets", Type: field.TypeInt, Nullable: true},
	}
	// DatasetTable holds the schema information for the "dataset" table.
	DatasetTable = &schema.Table{
		Name:       "dataset",
		Columns:    DatasetColumns,
		PrimaryKey: []*schema.Column{DatasetColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dataset_dataset_root_datasets",
				Columns:    []*schema.Column{DatasetColumns[19]},
				RefColumns: []*schema.Column{DatasetRootColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DatasetRootColumns holds the columns for the "dataset_root" table.
	DatasetRootColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "Dataset"},
		{Name: "path", Type: field.TypeString, Default: "/workspace/data"},
		{Name: "is_use", Type: field.TypeBool, Default: true},
	}
	// DatasetRootTable holds the schema information for the "dataset_root" table.
	DatasetRootTable = &schema.Table{
		Name:       "dataset_root",
		Columns:    DatasetRootColumns,
		PrimaryKey: []*schema.Column{DatasetRootColumns[0]},
	}
	// DeviceColumns holds the columns for the "device" table.
	DeviceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "port", Type: field.TypeInt},
		{Name: "is_use", Type: field.TypeBool, Default: true},
		{Name: "type", Type: field.TypeString, Default: "engine"},
		{Name: "connection", Type: field.TypeString, Default: "rest"},
		{Name: "available", Type: field.TypeString, Default: "false"},
	}
	// DeviceTable holds the schema information for the "device" table.
	DeviceTable = &schema.Table{
		Name:       "device",
		Columns:    DeviceColumns,
		PrimaryKey: []*schema.Column{DeviceColumns[0]},
	}
	// EnginelogColumns holds the columns for the "enginelog" table.
	EnginelogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "modeling_id", Type: field.TypeInt, Default: -1},
		{Name: "level", Type: field.TypeString},
		{Name: "filename", Type: field.TypeString},
		{Name: "line", Type: field.TypeInt},
		{Name: "message", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// EnginelogTable holds the schema information for the "enginelog" table.
	EnginelogTable = &schema.Table{
		Name:       "enginelog",
		Columns:    EnginelogColumns,
		PrimaryKey: []*schema.Column{EnginelogColumns[0]},
	}
	// GpuColumns holds the columns for the "gpu" table.
	GpuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "index", Type: field.TypeInt, Default: 0},
		{Name: "name", Type: field.TypeString},
		{Name: "state", Type: field.TypeString, Default: "idle"},
		{Name: "is_use", Type: field.TypeBool, Default: true},
		{Name: "device_id", Type: field.TypeInt, Nullable: true, Default: 0},
	}
	// GpuTable holds the schema information for the "gpu" table.
	GpuTable = &schema.Table{
		Name:       "gpu",
		Columns:    GpuColumns,
		PrimaryKey: []*schema.Column{GpuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "gpu_device_gpu",
				Columns:    []*schema.Column{GpuColumns[6]},
				RefColumns: []*schema.Column{DeviceColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HyperParamsHistoryColumns holds the columns for the "hyper_params_history" table.
	HyperParamsHistoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "trial_id", Type: field.TypeInt, Comment: "modeling_id", Default: 0},
		{Name: "trial_uuid", Type: field.TypeString, Default: ""},
		{Name: "model", Type: field.TypeString, Default: ""},
		{Name: "model_num", Type: field.TypeInt, Default: 0},
		{Name: "params", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
	}
	// HyperParamsHistoryTable holds the schema information for the "hyper_params_history" table.
	HyperParamsHistoryTable = &schema.Table{
		Name:       "hyper_params_history",
		Comment:    "Hyper parameter history per trial",
		Columns:    HyperParamsHistoryColumns,
		PrimaryKey: []*schema.Column{HyperParamsHistoryColumns[0]},
	}
	// ModelingColumns holds the columns for the "modeling" table.
	ModelingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "local_id", Type: field.TypeInt, Comment: "Modeling index in each task", Default: 1},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true, Comment: "Base Modeling ID", Default: 0},
		{Name: "parent_local_id", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "dataset_id", Type: field.TypeInt, Nullable: true, Comment: "Dataset ID", Default: 0},
		{Name: "params", Type: field.TypeJSON, Comment: "User configuration"},
		{Name: "dataset_stat", Type: field.TypeJSON, Comment: "Engine에서 측정한 dataset 정보"},
		{Name: "modeling_type", Type: field.TypeString, Comment: "initial | update | evaluation", Default: "modeling"},
		{Name: "modeling_step", Type: field.TypeString, Comment: "current task step", Default: "idle"},
		{Name: "performance", Type: field.TypeJSON, Comment: "Performance"},
		{Name: "progress", Type: field.TypeFloat64, Comment: "task progress"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "task_id", Type: field.TypeInt, Nullable: true, Comment: "Parent task ID", Default: 0},
	}
	// ModelingTable holds the schema information for the "modeling" table.
	ModelingTable = &schema.Table{
		Name:       "modeling",
		Comment:    "Modeling task table",
		Columns:    ModelingColumns,
		PrimaryKey: []*schema.Column{ModelingColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "modeling_task_modelings",
				Columns:    []*schema.Column{ModelingColumns[14]},
				RefColumns: []*schema.Column{TaskColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ModelingDetailsColumns holds the columns for the "modeling_details" table.
	ModelingDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "model", Type: field.TypeString, Comment: "model name", Default: ""},
		{Name: "data_type", Type: field.TypeString, Comment: "result data type", Default: ""},
		{Name: "data", Type: field.TypeJSON, Comment: "result data"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modeling_id", Type: field.TypeInt, Nullable: true, Comment: "Parent modeling ID", Default: 0},
	}
	// ModelingDetailsTable holds the schema information for the "modeling_details" table.
	ModelingDetailsTable = &schema.Table{
		Name:       "modeling_details",
		Comment:    "Modeling result table",
		Columns:    ModelingDetailsColumns,
		PrimaryKey: []*schema.Column{ModelingDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "modeling_details_modeling_modeling_details",
				Columns:    []*schema.Column{ModelingDetailsColumns[5]},
				RefColumns: []*schema.Column{ModelingColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "modelingdetails_modeling_id_model_data_type",
				Unique:  true,
				Columns: []*schema.Column{ModelingDetailsColumns[5], ModelingDetailsColumns[1], ModelingDetailsColumns[2]},
			},
		},
	}
	// ModelingModelsColumns holds the columns for the "modeling_models" table.
	ModelingModelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "data_type", Type: field.TypeString, Comment: "result data type", Default: ""},
		{Name: "data", Type: field.TypeString, Comment: "result data", Default: "{}"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modeling_id", Type: field.TypeInt, Nullable: true, Comment: "Parent modeling ID", Default: 0},
	}
	// ModelingModelsTable holds the schema information for the "modeling_models" table.
	ModelingModelsTable = &schema.Table{
		Name:       "modeling_models",
		Comment:    "model rank table",
		Columns:    ModelingModelsColumns,
		PrimaryKey: []*schema.Column{ModelingModelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "modeling_models_modeling_modeling_models",
				Columns:    []*schema.Column{ModelingModelsColumns[4]},
				RefColumns: []*schema.Column{ModelingColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "modelingmodels_modeling_id_data_type",
				Unique:  true,
				Columns: []*schema.Column{ModelingModelsColumns[4], ModelingModelsColumns[1]},
			},
		},
	}
	// ProjectColumns holds the columns for the "project" table.
	ProjectColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_use", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// ProjectTable holds the schema information for the "project" table.
	ProjectTable = &schema.Table{
		Name:       "project",
		Columns:    ProjectColumns,
		PrimaryKey: []*schema.Column{ProjectColumns[0]},
	}
	// TaskColumns holds the columns for the "task" table.
	TaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "dataset_id", Type: field.TypeInt, Comment: "dataset id"},
		{Name: "title", Type: field.TypeString, Comment: "task name", Default: "Modeling task"},
		{Name: "description", Type: field.TypeString, Comment: "user memo", Default: ""},
		{Name: "engine_type", Type: field.TypeString, Comment: "engine type"},
		{Name: "target_metric", Type: field.TypeString, Default: "wa"},
		{Name: "params", Type: field.TypeJSON, Comment: "params by engine type"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project_id", Type: field.TypeInt, Nullable: true, Comment: "Project ID", Default: 0},
	}
	// TaskTable holds the schema information for the "task" table.
	TaskTable = &schema.Table{
		Name:       "task",
		Comment:    "KAI.S가 제공하는 task: modeling|update model|performance evaluation",
		Columns:    TaskColumns,
		PrimaryKey: []*schema.Column{TaskColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_project_tasks",
				Columns:    []*schema.Column{TaskColumns[9]},
				RefColumns: []*schema.Column{ProjectColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TrialColumns holds the columns for the "trial" table.
	TrialColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "state", Type: field.TypeString},
		{Name: "save_path", Type: field.TypeString},
		{Name: "target_metric", Type: field.TypeString, Default: "wa"},
		{Name: "progress", Type: field.TypeFloat64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "modeling_id", Type: field.TypeInt, Nullable: true, Default: 0},
	}
	// TrialTable holds the schema information for the "trial" table.
	TrialTable = &schema.Table{
		Name:       "trial",
		Comment:    "trials in modeling",
		Columns:    TrialColumns,
		PrimaryKey: []*schema.Column{TrialColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "trial_modeling_trials",
				Columns:    []*schema.Column{TrialColumns[8]},
				RefColumns: []*schema.Column{ModelingColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TrialDetailsColumns holds the columns for the "trial_details" table.
	TrialDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "trial_uuid", Type: field.TypeString, Nullable: true, Comment: "Parent trial UUID"},
		{Name: "model", Type: field.TypeString, Comment: "model name", Default: ""},
		{Name: "data_type", Type: field.TypeString, Comment: "result data type", Default: ""},
		{Name: "data", Type: field.TypeJSON, Comment: "result data"},
		{Name: "is_model_saved", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// TrialDetailsTable holds the schema information for the "trial_details" table.
	TrialDetailsTable = &schema.Table{
		Name:       "trial_details",
		Comment:    "trial result table",
		Columns:    TrialDetailsColumns,
		PrimaryKey: []*schema.Column{TrialDetailsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "trialdetails_trial_uuid_model_data_type",
				Unique:  true,
				Columns: []*schema.Column{TrialDetailsColumns[1], TrialDetailsColumns[2], TrialDetailsColumns[3]},
			},
		},
	}
	// TrialStatusColumns holds the columns for the "trial_status" table.
	TrialStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "trial_uuid", Type: field.TypeString, Nullable: true, Comment: "Parent trial UUID"},
		{Name: "status_json", Type: field.TypeJSON, Comment: "epoch data"},
		{Name: "created_at", Type: field.TypeTime},
	}
	// TrialStatusTable holds the schema information for the "trial_status" table.
	TrialStatusTable = &schema.Table{
		Name:       "trial_status",
		Comment:    "Trial epoch table",
		Columns:    TrialStatusColumns,
		PrimaryKey: []*schema.Column{TrialStatusColumns[0]},
	}
	// KaisUserColumns holds the columns for the "kais_user" table.
	KaisUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "group", Type: field.TypeInt},
		{Name: "is_use", Type: field.TypeBool, Default: true},
		{Name: "token", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "login_at", Type: field.TypeTime, Nullable: true},
	}
	// KaisUserTable holds the schema information for the "kais_user" table.
	KaisUserTable = &schema.Table{
		Name:       "kais_user",
		Columns:    KaisUserColumns,
		PrimaryKey: []*schema.Column{KaisUserColumns[0]},
	}
	// KaisUserGroupColumns holds the columns for the "kais_user_group" table.
	KaisUserGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "level", Type: field.TypeInt, Unique: true},
		{Name: "is_use", Type: field.TypeBool, Default: true},
	}
	// KaisUserGroupTable holds the schema information for the "kais_user_group" table.
	KaisUserGroupTable = &schema.Table{
		Name:       "kais_user_group",
		Columns:    KaisUserGroupColumns,
		PrimaryKey: []*schema.Column{KaisUserGroupColumns[0]},
	}
	// KaisUserProjectColumns holds the columns for the "kais_user_project" table.
	KaisUserProjectColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "is_use", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "project_id", Type: field.TypeInt},
	}
	// KaisUserProjectTable holds the schema information for the "kais_user_project" table.
	KaisUserProjectTable = &schema.Table{
		Name:       "kais_user_project",
		Columns:    KaisUserProjectColumns,
		PrimaryKey: []*schema.Column{KaisUserProjectColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kais_user_project_project_user_project",
				Columns:    []*schema.Column{KaisUserProjectColumns[5]},
				RefColumns: []*schema.Column{ProjectColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ConfigTable,
		DatasetTable,
		DatasetRootTable,
		DeviceTable,
		EnginelogTable,
		GpuTable,
		HyperParamsHistoryTable,
		ModelingTable,
		ModelingDetailsTable,
		ModelingModelsTable,
		ProjectTable,
		TaskTable,
		TrialTable,
		TrialDetailsTable,
		TrialStatusTable,
		KaisUserTable,
		KaisUserGroupTable,
		KaisUserProjectTable,
	}
)

func init() {
	ConfigTable.Annotation = &entsql.Annotation{
		Table: "config",
	}
	DatasetTable.ForeignKeys[0].RefTable = DatasetRootTable
	DatasetTable.Annotation = &entsql.Annotation{
		Table: "dataset",
	}
	DatasetRootTable.Annotation = &entsql.Annotation{
		Table: "dataset_root",
	}
	DeviceTable.Annotation = &entsql.Annotation{
		Table: "device",
	}
	EnginelogTable.Annotation = &entsql.Annotation{
		Table: "enginelog",
	}
	GpuTable.ForeignKeys[0].RefTable = DeviceTable
	GpuTable.Annotation = &entsql.Annotation{
		Table: "gpu",
	}
	HyperParamsHistoryTable.Annotation = &entsql.Annotation{
		Table: "hyper_params_history",
	}
	ModelingTable.ForeignKeys[0].RefTable = TaskTable
	ModelingTable.Annotation = &entsql.Annotation{
		Table: "modeling",
	}
	ModelingDetailsTable.ForeignKeys[0].RefTable = ModelingTable
	ModelingDetailsTable.Annotation = &entsql.Annotation{
		Table: "modeling_details",
	}
	ModelingModelsTable.ForeignKeys[0].RefTable = ModelingTable
	ModelingModelsTable.Annotation = &entsql.Annotation{
		Table: "modeling_models",
	}
	ProjectTable.Annotation = &entsql.Annotation{
		Table: "project",
	}
	TaskTable.ForeignKeys[0].RefTable = ProjectTable
	TaskTable.Annotation = &entsql.Annotation{
		Table: "task",
	}
	TrialTable.ForeignKeys[0].RefTable = ModelingTable
	TrialTable.Annotation = &entsql.Annotation{
		Table: "trial",
	}
	TrialDetailsTable.Annotation = &entsql.Annotation{
		Table: "trial_details",
	}
	TrialStatusTable.Annotation = &entsql.Annotation{
		Table: "trial_status",
	}
	KaisUserTable.Annotation = &entsql.Annotation{
		Table: "kais_user",
	}
	KaisUserGroupTable.Annotation = &entsql.Annotation{
		Table: "kais_user_group",
	}
	KaisUserProjectTable.ForeignKeys[0].RefTable = ProjectTable
	KaisUserProjectTable.Annotation = &entsql.Annotation{
		Table: "kais_user_project",
	}
}
