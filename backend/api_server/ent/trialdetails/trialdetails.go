// Code generated by ent, DO NOT EDIT.

package trialdetails

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the trialdetails type in the database.
	Label = "trial_details"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTrialUUID holds the string denoting the trial_uuid field in the database.
	FieldTrialUUID = "trial_uuid"
	// FieldModel holds the string denoting the model field in the database.
	FieldModel = "model"
	// FieldDataType holds the string denoting the data_type field in the database.
	FieldDataType = "data_type"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// FieldIsModelSaved holds the string denoting the is_model_saved field in the database.
	FieldIsModelSaved = "is_model_saved"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the trialdetails in the database.
	Table = "trial_details"
)

// Columns holds all SQL columns for trialdetails fields.
var Columns = []string{
	FieldID,
	FieldTrialUUID,
	FieldModel,
	FieldDataType,
	FieldData,
	FieldIsModelSaved,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultModel holds the default value on creation for the "model" field.
	DefaultModel string
	// DefaultDataType holds the default value on creation for the "data_type" field.
	DefaultDataType string
	// DefaultData holds the default value on creation for the "data" field.
	DefaultData []string
	// DefaultIsModelSaved holds the default value on creation for the "is_model_saved" field.
	DefaultIsModelSaved bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the TrialDetails queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTrialUUID orders the results by the trial_uuid field.
func ByTrialUUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTrialUUID, opts...).ToFunc()
}

// ByModel orders the results by the model field.
func ByModel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldModel, opts...).ToFunc()
}

// ByDataType orders the results by the data_type field.
func ByDataType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDataType, opts...).ToFunc()
}

// ByIsModelSaved orders the results by the is_model_saved field.
func ByIsModelSaved(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsModelSaved, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
