// Code generated by ent, DO NOT EDIT.

package configuration

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the configuration type in the database.
	Label = "configuration"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldConfigType holds the string denoting the config_type field in the database.
	FieldConfigType = "config_type"
	// FieldConfigKey holds the string denoting the config_key field in the database.
	FieldConfigKey = "config_key"
	// FieldConfigVal holds the string denoting the config_val field in the database.
	FieldConfigVal = "config_val"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the configuration in the database.
	Table = "config"
)

// Columns holds all SQL columns for configuration fields.
var Columns = []string{
	FieldID,
	FieldConfigType,
	FieldConfigKey,
	FieldConfigVal,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the Configuration queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByConfigType orders the results by the config_type field.
func ByConfigType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldConfigType, opts...).ToFunc()
}

// ByConfigKey orders the results by the config_key field.
func ByConfigKey(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldConfigKey, opts...).ToFunc()
}

// ByConfigVal orders the results by the config_val field.
func ByConfigVal(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldConfigVal, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
