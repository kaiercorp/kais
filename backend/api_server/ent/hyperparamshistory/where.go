// Code generated by ent, DO NOT EDIT.

package hyperparamshistory

import (
	"api_server/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldID, id))
}

// TrialID applies equality check predicate on the "trial_id" field. It's identical to TrialIDEQ.
func TrialID(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldTrialID, v))
}

// TrialUUID applies equality check predicate on the "trial_uuid" field. It's identical to TrialUUIDEQ.
func TrialUUID(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldTrialUUID, v))
}

// Model applies equality check predicate on the "model" field. It's identical to ModelEQ.
func Model(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldModel, v))
}

// ModelNum applies equality check predicate on the "model_num" field. It's identical to ModelNumEQ.
func ModelNum(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldModelNum, v))
}

// Params applies equality check predicate on the "params" field. It's identical to ParamsEQ.
func Params(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldParams, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// TrialIDEQ applies the EQ predicate on the "trial_id" field.
func TrialIDEQ(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldTrialID, v))
}

// TrialIDNEQ applies the NEQ predicate on the "trial_id" field.
func TrialIDNEQ(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldTrialID, v))
}

// TrialIDIn applies the In predicate on the "trial_id" field.
func TrialIDIn(vs ...int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldTrialID, vs...))
}

// TrialIDNotIn applies the NotIn predicate on the "trial_id" field.
func TrialIDNotIn(vs ...int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldTrialID, vs...))
}

// TrialIDGT applies the GT predicate on the "trial_id" field.
func TrialIDGT(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldTrialID, v))
}

// TrialIDGTE applies the GTE predicate on the "trial_id" field.
func TrialIDGTE(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldTrialID, v))
}

// TrialIDLT applies the LT predicate on the "trial_id" field.
func TrialIDLT(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldTrialID, v))
}

// TrialIDLTE applies the LTE predicate on the "trial_id" field.
func TrialIDLTE(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldTrialID, v))
}

// TrialUUIDEQ applies the EQ predicate on the "trial_uuid" field.
func TrialUUIDEQ(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldTrialUUID, v))
}

// TrialUUIDNEQ applies the NEQ predicate on the "trial_uuid" field.
func TrialUUIDNEQ(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldTrialUUID, v))
}

// TrialUUIDIn applies the In predicate on the "trial_uuid" field.
func TrialUUIDIn(vs ...string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldTrialUUID, vs...))
}

// TrialUUIDNotIn applies the NotIn predicate on the "trial_uuid" field.
func TrialUUIDNotIn(vs ...string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldTrialUUID, vs...))
}

// TrialUUIDGT applies the GT predicate on the "trial_uuid" field.
func TrialUUIDGT(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldTrialUUID, v))
}

// TrialUUIDGTE applies the GTE predicate on the "trial_uuid" field.
func TrialUUIDGTE(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldTrialUUID, v))
}

// TrialUUIDLT applies the LT predicate on the "trial_uuid" field.
func TrialUUIDLT(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldTrialUUID, v))
}

// TrialUUIDLTE applies the LTE predicate on the "trial_uuid" field.
func TrialUUIDLTE(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldTrialUUID, v))
}

// TrialUUIDContains applies the Contains predicate on the "trial_uuid" field.
func TrialUUIDContains(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldContains(FieldTrialUUID, v))
}

// TrialUUIDHasPrefix applies the HasPrefix predicate on the "trial_uuid" field.
func TrialUUIDHasPrefix(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldHasPrefix(FieldTrialUUID, v))
}

// TrialUUIDHasSuffix applies the HasSuffix predicate on the "trial_uuid" field.
func TrialUUIDHasSuffix(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldHasSuffix(FieldTrialUUID, v))
}

// TrialUUIDEqualFold applies the EqualFold predicate on the "trial_uuid" field.
func TrialUUIDEqualFold(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEqualFold(FieldTrialUUID, v))
}

// TrialUUIDContainsFold applies the ContainsFold predicate on the "trial_uuid" field.
func TrialUUIDContainsFold(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldContainsFold(FieldTrialUUID, v))
}

// ModelEQ applies the EQ predicate on the "model" field.
func ModelEQ(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldModel, v))
}

// ModelNEQ applies the NEQ predicate on the "model" field.
func ModelNEQ(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldModel, v))
}

// ModelIn applies the In predicate on the "model" field.
func ModelIn(vs ...string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldModel, vs...))
}

// ModelNotIn applies the NotIn predicate on the "model" field.
func ModelNotIn(vs ...string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldModel, vs...))
}

// ModelGT applies the GT predicate on the "model" field.
func ModelGT(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldModel, v))
}

// ModelGTE applies the GTE predicate on the "model" field.
func ModelGTE(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldModel, v))
}

// ModelLT applies the LT predicate on the "model" field.
func ModelLT(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldModel, v))
}

// ModelLTE applies the LTE predicate on the "model" field.
func ModelLTE(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldModel, v))
}

// ModelContains applies the Contains predicate on the "model" field.
func ModelContains(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldContains(FieldModel, v))
}

// ModelHasPrefix applies the HasPrefix predicate on the "model" field.
func ModelHasPrefix(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldHasPrefix(FieldModel, v))
}

// ModelHasSuffix applies the HasSuffix predicate on the "model" field.
func ModelHasSuffix(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldHasSuffix(FieldModel, v))
}

// ModelEqualFold applies the EqualFold predicate on the "model" field.
func ModelEqualFold(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEqualFold(FieldModel, v))
}

// ModelContainsFold applies the ContainsFold predicate on the "model" field.
func ModelContainsFold(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldContainsFold(FieldModel, v))
}

// ModelNumEQ applies the EQ predicate on the "model_num" field.
func ModelNumEQ(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldModelNum, v))
}

// ModelNumNEQ applies the NEQ predicate on the "model_num" field.
func ModelNumNEQ(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldModelNum, v))
}

// ModelNumIn applies the In predicate on the "model_num" field.
func ModelNumIn(vs ...int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldModelNum, vs...))
}

// ModelNumNotIn applies the NotIn predicate on the "model_num" field.
func ModelNumNotIn(vs ...int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldModelNum, vs...))
}

// ModelNumGT applies the GT predicate on the "model_num" field.
func ModelNumGT(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldModelNum, v))
}

// ModelNumGTE applies the GTE predicate on the "model_num" field.
func ModelNumGTE(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldModelNum, v))
}

// ModelNumLT applies the LT predicate on the "model_num" field.
func ModelNumLT(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldModelNum, v))
}

// ModelNumLTE applies the LTE predicate on the "model_num" field.
func ModelNumLTE(v int) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldModelNum, v))
}

// ParamsEQ applies the EQ predicate on the "params" field.
func ParamsEQ(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldParams, v))
}

// ParamsNEQ applies the NEQ predicate on the "params" field.
func ParamsNEQ(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldParams, v))
}

// ParamsIn applies the In predicate on the "params" field.
func ParamsIn(vs ...string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldParams, vs...))
}

// ParamsNotIn applies the NotIn predicate on the "params" field.
func ParamsNotIn(vs ...string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldParams, vs...))
}

// ParamsGT applies the GT predicate on the "params" field.
func ParamsGT(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldParams, v))
}

// ParamsGTE applies the GTE predicate on the "params" field.
func ParamsGTE(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldParams, v))
}

// ParamsLT applies the LT predicate on the "params" field.
func ParamsLT(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldParams, v))
}

// ParamsLTE applies the LTE predicate on the "params" field.
func ParamsLTE(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldParams, v))
}

// ParamsContains applies the Contains predicate on the "params" field.
func ParamsContains(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldContains(FieldParams, v))
}

// ParamsHasPrefix applies the HasPrefix predicate on the "params" field.
func ParamsHasPrefix(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldHasPrefix(FieldParams, v))
}

// ParamsHasSuffix applies the HasSuffix predicate on the "params" field.
func ParamsHasSuffix(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldHasSuffix(FieldParams, v))
}

// ParamsEqualFold applies the EqualFold predicate on the "params" field.
func ParamsEqualFold(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEqualFold(FieldParams, v))
}

// ParamsContainsFold applies the ContainsFold predicate on the "params" field.
func ParamsContainsFold(v string) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldContainsFold(FieldParams, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HyperParamsHistory) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HyperParamsHistory) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HyperParamsHistory) predicate.HyperParamsHistory {
	return predicate.HyperParamsHistory(sql.NotPredicates(p))
}
